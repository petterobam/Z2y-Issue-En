name: build Issue blog

on:
  workflow_dispatch:
  issues:
    types: [opened, edited]
  push:
    branches:
      - main  # 只有在 main 分支上的提交才会触发工作流

jobs:
  build:
    name: Generate blog
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Get config.json
        run: |
          echo "====== check config.josn file ======"
          cat config.json
          echo "====== check config.josn end  ======"
          sudo apt-get install jq

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Clone source code
        run: |
            Issue_VERSION=$(jq -r ".Issue_VERSION" config.json || echo 'default')
            git clone https://github.com/${{ github.repository }}.git /opt/Issue;
            cd /opt/Issue/
            lastTag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "default")
            if [ $Issue_VERSION == 'last' ]; then git checkout $lastTag; else git checkout $Issue_VERSION; fi;

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r /opt/Issue/requirements.txt

      - name: Generate new html
        run: |
          cp -r ./* /opt/Issue/
          cd /opt/Issue/
          python Issue.py ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} --issue_number '${{ github.event.issue.number }}'
          cp -a /opt/Issue/docs ${{ github.workspace }} 
          cp -a /opt/Issue/backup ${{ github.workspace }} 
          cp /opt/Issue/blogBase.json ${{ github.workspace }} 
          
      - name: update html
        run: |
          git config --local user.email "$(jq -r ".email" config.json)"
          git config --local user.name "${{ github.repository_owner }}"
          git add .
          git commit -a -m '🎉auto update by Issue action' || echo "nothing to commit"
          git push || echo "nothing to push"
          sleep 3
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'docs/.'
          
  deploy:
    name: Deploy blog
    runs-on: ubuntu-20.04
    needs: build
    permissions:
      contents: write
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
